{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_still","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,MAjCf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAepC,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCLlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACL,mCACTC,EAFc,iDAEmCC,UAAUH,GAF7C,6BACL,oCADK,SAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,gBAAgBZ,QAIzCa,QAAQC,IAAIT,GAdQ,kBAebC,GAfa,4CAAH,sDCaNS,MAbf,YAA0C,IAAnBN,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAE9B,OACI,sBAEIgB,UAAU,6DAFd,UAII,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,OAJAD,ICqBFU,EAtBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFL,SAAEA,GAAe,IAAD,EACfd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDb0BK,CAAc5B,GAAlCa,EAFiB,EAEtBN,KAAae,EAFS,EAETA,QAErB,OACI,qCACI,6BAAKtB,IACJsB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEkBtBkB,EA9BM,WAAM,MAGa3C,mBAAS,CAAC,WAHvB,mBAGhB4C,EAHgB,KAGJ7C,EAHI,KAUvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,U,MChB7B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bbae94e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nfunction AddCategory({ setCategories }) {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} >\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\n\nAddCategory.propTypes  = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\n\nexport const getGifts = async (category) => {\n    const apiKey = 'b8nLEbz4o1uuy6tLPXyRgRBvFEjiNni4';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_still.url\n        }\n    });\n\n    console.log(data);\n    return gifs;\n}\n","import React from 'react'\n\nfunction GifGridItem({ id, title, url }) {\n\n    return (\n        <div\n            key={id}\n            className=\"card animate__animated animate__bounceIn animate__delay-2s\"\n        >\n            <img src={url} alt={title} />\n            <p> {title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifts(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\"\nimport { getGifts } from '../helpers/getGifts';\n\nexport const useFetchGifts = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifts(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    }, [category]);\n\n    return state;\n\n}","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Push', 'Samuri X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['Naruto'])\n\n\n    // const handleAdd = () => {\n    //     setCategories(cats => [...cats, 'Naruto']);\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>   \n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n                {\n                    categories.map( category => (\n                        <GifGrid \n                        key={category}\n                        category={category}\n                        />\n                    )\n                   )\n                    \n                }\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}